<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>CREATA – Contract Opportunities</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    :root{
      --bg:#f7f7f9; --ink:#111; --card:#fff; --bd:#e6e6ea; --link:#0a58ca; --blue:#0d6efd;
      --red:#dc3545; --orange:#fd7e14; --amber:#ffc107; --gold:#f6c344; --teal:#20c997; --muted:#6c757d;
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;color:var(--ink);background:var(--bg);overflow-y:scroll}
    a{color:var(--link);text-decoration:none}
    .shell{display:grid;grid-template-columns:360px 1fr;gap:16px;max-width:1260px;margin:24px auto;padding:0 16px}
    .panel{background:#fff;border:1px solid var(--bd);border-radius:14px}
    .side{padding:12px;position:sticky;top:16px;height:fit-content;overflow:visible}
    .section{border:1px solid var(--bd);border-radius:12px;margin:8px 0;background:#fff;overflow:visible}
    .section summary{list-style:none;cursor:pointer;user-select:none;padding:12px 14px;font-weight:600;border-bottom:1px solid var(--bd);display:flex;align-items:center;justify-content:space-between}
    .section summary::-webkit-details-marker{display:none}
    .caret{transform:rotate(0deg);transition:transform .15s ease}
    details[open] .caret{transform:rotate(90deg)}
    .sect-body{padding:12px}
    .field{margin:10px 0;position:relative}
    .field label{display:block;font-size:12px;color:#555;margin-bottom:6px}
    .input,.select{width:100%;padding:10px;border:1px solid #ddd;border-radius:10px;background:#fff}
    /* inline expanding checklist */
    .checklist{display:flex;flex-direction:column;gap:8px}
    .opt{display:flex;align-items:center;gap:8px}
    .muted{color:var(--muted)}
    /* dropdown lists (type-ahead) */
    .dd{position:absolute;left:0;right:0;top:100%;z-index:1200;background:#fff;border:1px solid #ddd;border-radius:10px;margin-top:4px;max-height:300px;overflow:auto;box-shadow:0 12px 28px rgba(0,0,0,.15);display:none}
    .dd.open{display:block}
    .dd-item{padding:8px 10px;cursor:pointer}
    .dd-item:hover{background:#f2f2f2}
    /* results */
    .results{padding:12px}
    .head{display:flex;align-items:center;gap:12px;padding:10px 12px;border-bottom:1px solid var(--bd)}
    .head h2{font-size:18px;margin:0}
    .count{margin-left:auto;color:#666}
    .card{background:#fff;border:1px solid var(--bd);border-radius:14px;padding:16px;margin:12px 0}
    .row-top{display:flex;flex-wrap:wrap;gap:10px;align-items:center;margin-bottom:8px}
    .solno{font-weight:700;word-break:break-word}
    .title{font-weight:600;margin:4px 0;word-break:break-word}
    .desc{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;line-height:1.35;margin-top:6px;white-space:normal;word-break:break-word}
    .right{margin-left:auto}
    .chip{border:1px solid #ddd;border-radius:999px;padding:4px 8px;font-size:12px;white-space:nowrap;background:#fafafa}
    .badge{border-radius:999px;padding:4px 10px;font-size:12px;border:1px solid #ddd;white-space:nowrap}
    .b-red{background:#fee2e2;border-color:#fca5a5;color:#b91c1c}
    .b-orange{background:#ffedd5;border-color:#fdba74;color:#c2410c}
    .b-amber{background:#fff3cd;border-color:#ffe69c;color:#b58105}
    .b-gold{background:#fff6d8;border-color:#f6c344;color:#8d6500}
    .b-teal{background:#d1fae5;border-color:#99f6e4;color:#0f766e}
    .b-gray{background:#f1f3f5;border-color:#e9ecef;color:#495057}
    .btn{display:inline-flex;align-items:center;justify-content:center;width:100%;gap:8px;padding:12px;border:1px solid var(--blue);border-radius:10px;background:var(--blue);color:#fff;font-weight:600;cursor:pointer}
    .btn[disabled]{opacity:.6;cursor:not-allowed}
  </style>
</head>
<body>
  <div class="shell">
    <!-- LEFT: Filters -->
    <aside class="panel side">

      <!-- Keyword -->
      <details class="section" open>
        <summary>Keyword Search <span class="caret">▸</span></summary>
        <div class="sect-body">
          <div class="field">
            <label for="q">All Words</label>
            <input id="q" class="input" placeholder="e.g., lodging, conference">
          </div>
        </div>
      </details>

      <!-- Notice Types (inline expanding, pre-checked) -->
      <details class="section" open>
        <summary>Notice Types <span class="caret">▸</span></summary>
        <div class="sect-body">
          <div class="checklist">
            <label class="opt"><input type="checkbox" class="nt" value="COMBINED_SYNOPSIS_SOLICITATION" checked> Combined Synopsis/Solicitation</label>
            <label class="opt"><input type="checkbox" class="nt" value="PRESOLICITATION" checked> Presolicitation</label>
            <label class="opt"><input type="checkbox" class="nt" value="SOURCES_SOUGHT" checked> Sources Sought</label>
            <label class="opt"><input type="checkbox" class="nt" value="SPECIAL_NOTICE" checked> Special Notice</label>
          </div>
          <div class="muted" style="margin-top:6px;font-size:12px">All four are selected by default.</div>
        </div>
      </details>

      <!-- Federal Organization (type-ahead) -->
      <details class="section">
        <summary>Federal Organizations <span class="caret">▸</span></summary>
        <div class="sect-body">
          <div class="field" style="margin-top:0">
            <label for="org">Agency / Department / Office</label>
            <input id="org" class="input" placeholder="Type e.g., Department of Defense, Navy, KYARNG">
            <div id="org-dd" class="dd"></div>
            <div class="muted" style="margin-top:6px;font-size:12px">Start typing (“defen”, “navy”, “army”, “va”, …) and pick from the list.</div>
          </div>
        </div>
      </details>

      <!-- NAICS -->
      <details class="section">
        <summary>Product or Service (NAICS) <span class="caret">▸</span></summary>
        <div class="sect-body">
          <div class="field" style="margin-top:0">
            <label for="naics">NAICS</label>
            <input id="naics" class="input" placeholder="e.g., 721110">
            <div id="naics-dd" class="dd"></div>
          </div>
        </div>
      </details>

      <!-- Dates -->
      <details class="section" open>
        <summary>Published Dates <span class="caret">▸</span></summary>
        <div class="sect-body">
          <div class="field">
            <label for="range">Within</label>
            <select id="range" class="select">
              <option value="60" selected>Last 60 days</option>
              <option value="30">Last 30 days</option>
              <option value="90">Last 90 days</option>
              <option value="180">Last 180 days</option>
              <option value="365">Last 1 year</option>
              <option value="730">Last 2 years</option>
              <option value="custom">Custom range…</option>
            </select>
          </div>
          <div id="customDates" style="display:none">
            <div class="field"><label for="from">From</label><input id="from" type="date" class="input"></div>
            <div class="field"><label for="to">To</label><input id="to" type="date" class="input"></div>
          </div>
        </div>
      </details>

      <div class="field" style="margin-top:14px">
        <button id="search" class="btn">Search</button>
        <div id="status" class="muted" style="margin-top:8px">Idle</div>
      </div>
    </aside>

    <!-- RIGHT: Results -->
    <section class="panel results">
      <div class="head">
        <h2>Contract Opportunities</h2>
        <div class="count" id="count">0 results</div>
      </div>
      <div id="list" style="padding:8px 4px 12px"></div>
    </section>
  </div>

  <script>
    const $ = s => document.querySelector(s);
    const $all = s => Array.from(document.querySelectorAll(s));
    const pad = n => String(n).padStart(2,'0');
    const fmtMDY = d => `${pad(d.getMonth()+1)}/${pad(d.getDate())}/${d.getFullYear()}`;
    const fmtYMD = d => `${d.getFullYear()}-${pad(d.getMonth()+1)}-${pad(d.getDate())}`;
    const parseMDY = s => { const m=/^(\d{2})\/(\d{2})\/(\d{4})$/.exec(s||''); return m ? new Date(`${m[3]}-${m[1]}-${m[2]}T00:00:00`) : null; };

    // Date range handling
    (function bounds(){
      const t=new Date(), min=new Date(t.getTime()-730*86400000);
      $('#from').min=fmtYMD(min); $('#to').min=fmtYMD(min);
      $('#from').max=fmtYMD(t);   $('#to').max=fmtYMD(t);
    })();
    function range(){
      const sel = $('#range').value, t=new Date();
      if (sel!=='custom'){
        const days=Number(sel)||60, f=new Date(t.getTime()-days*86400000);
        return { from:fmtMDY(f), to:fmtMDY(t) };
      } else {
        const f=$('#from').value, to=$('#to').value;
        const F=f? new Date(f): new Date(t.getTime()-60*86400000);
        const T=to? new Date(to): t;
        return { from:fmtMDY(F), to:fmtMDY(T) };
      }
    }
    $('#range').addEventListener('change', ()=> $('#customDates').style.display = $('#range').value==='custom' ? 'block' : 'none');

    // NAICS type-ahead
    const naicsInput=$('#naics'), naicsDD=$('#naics-dd'); let nTimer;
    function ddRender(dd, list, map){ dd.innerHTML=list.map(map).join('')||'<div class="dd-item muted">No matches</div>'; dd.classList.add('open'); }
    function ddClose(dd){ dd.classList.remove('open'); }
    function naicsQuery(q){
      if(!q) return ddClose(naicsDD);
      fetch(`/api/naics?q=${encodeURIComponent(q)}`).then(r=>r.json()).then(items=>{
        ddRender(naicsDD, items.slice(0,100), x=>`<div class="dd-item" data-code="${x.code}"><b>${x.code}</b> — ${x.title}</div>`);
        naicsDD.querySelectorAll('.dd-item').forEach(el=> el.onclick=()=>{ naicsInput.value=el.dataset.code; ddClose(naicsDD); });
      }).catch(()=> ddClose(naicsDD));
    }
    naicsInput.addEventListener('input', ()=>{ clearTimeout(nTimer); const q=naicsInput.value.trim(); nTimer=setTimeout(()=>naicsQuery(q),150); });
    naicsInput.addEventListener('focus', ()=>{ const q=naicsInput.value.trim(); if(q) naicsQuery(q); });
    document.addEventListener('click', e=>{ if(!naicsDD.contains(e.target) && e.target!==naicsInput) ddClose(naicsDD); });

    // ORG type-ahead (always active; before/after search)
    const orgInput=$('#org'), orgDD=$('#org-dd'); let oTimer;
    function orgQuery(q){
      if (!q) return ddClose(orgDD);
      fetch(`/api/orgs?q=${encodeURIComponent(q)}`).then(r=>r.json()).then(list=>{
        if (!Array.isArray(list) || !list.length) return ddClose(orgDD);
        ddRender(orgDD, list, x=>`<div class="dd-item">${x}</div>`);
        orgDD.querySelectorAll('.dd-item').forEach(el=> el.onclick=()=>{ orgInput.value=el.textContent; ddClose(orgDD); });
      }).catch(()=> ddClose(orgDD));
    }
    orgInput.addEventListener('input', ()=>{ clearTimeout(oTimer); const v=orgInput.value.trim(); oTimer=setTimeout(()=>orgQuery(v), 120); });
    orgInput.addEventListener('focus', ()=>{ const v=orgInput.value.trim(); if(v) orgQuery(v); });
    document.addEventListener('click', (e)=>{ if(!orgDD.contains(e.target) && e.target!==orgInput) ddClose(orgDD); });

    // deadline urgency badge
    function badge(deadline){
      if(!deadline) return ['b-gray','No due date'];
      const d=parseMDY(deadline); if(!d) return ['b-gray',deadline];
      const diff=Math.ceil((d - new Date())/86400000);
      if(diff<=1) return ['b-red',`Due ${deadline}`];
      if(diff===2) return ['b-orange',`Due ${deadline}`];
      if(diff===3) return ['b-amber',`Due ${deadline}`];
      if(diff===4) return ['b-gold',`Due ${deadline}`];
      if(diff<=7) return ['b-teal',`Due ${deadline}`];
      return ['b-gray',`Due ${deadline}`];
    }

    async function run(){
      const btn=$('#search');
      try{
        btn.disabled=true; $('#status').textContent='Searching…'; $('#count').textContent='Loading…';

        const q=$('#q').value.trim();
        const naics=$('#naics').value.trim();
        const types=$all('.nt:checked').map(x=>x.value).join(',');
        const {from,to}=range();
        const org=$('#org').value.trim();

        const url = `/api/sam/search?q=${encodeURIComponent(q)}&naics=${encodeURIComponent(naics)}&types=${encodeURIComponent(types)}&postedFrom=${encodeURIComponent(from)}&postedTo=${encodeURIComponent(to)}&limit=50&agency=${encodeURIComponent(org)}&department=${encodeURIComponent(org)}&subTier=${encodeURIComponent(org)}`;
        const r = await fetch(url);
        const j = await r.json();
        if(!j.ok) throw new Error(j.error || 'Search failed');

        let items=j.results||[];
        if(naics) items = items.filter(x => String(x.naics||'').startsWith(naics));
        if(q){
          const qq=q.toLowerCase();
          items = items.filter(x =>
            (x.title||'').toLowerCase().includes(qq) ||
            (x.description||'').toLowerCase().includes(qq)
          );
        }

        render(items);
        $('#count').textContent = `${items.length} of ${j.total || items.length} results`;
        $('#status').textContent = 'Done';
      }catch(e){
        console.error(e);
        $('#status').textContent='Error: '+(e.message||'search failed');
        render([]); $('#count').textContent='0 results';
        alert('Search failed. '+(e.message||''));
      }finally{ btn.disabled=false; }
    }

    function render(items){
      const box=$('#list'); box.innerHTML='';
      items.forEach(x=>{
        const [cls,lab]=badge(x.deadline);
        const el=document.createElement('div'); el.className='card';
        const desc=(x.description||'').replace(/</g,'&lt;').replace(/\s+/g,' ').trim();
        el.innerHTML=`
          <div class="row-top">
            <div class="solno">${x.solicitation_number||''}</div>
            ${x.agency_code||x.agency?`<span class="chip">${x.agency_code||x.agency}</span>`:''}
            ${x.naics?`<span class="chip">NAICS ${x.naics}</span>`:''}
            ${Number.isFinite(x.updates)&&x.updates>0?`<span class="chip">${x.updates} update${x.updates===1?'':'s'}</span>`:''}
            <div class="right">
              <span class="badge ${cls}">${lab}</span>
              ${x.url?`<a href="${x.url}" target="_blank" rel="noopener" class="chip" style="margin-left:8px">Open</a>`:''}
            </div>
          </div>
          ${x.title?`<div class="title"><a href="${x.url||'#'}" target="_blank" rel="noopener">${x.title}</a></div>`:''}
          <div class="desc" title="${desc}">${desc}</div>
        `;
        box.appendChild(el);
      });
    }

    $('#search').onclick=run;
    document.addEventListener('keydown', e=>{ if(e.key==='Enter') run(); });
  </script>
</body>
</html>

