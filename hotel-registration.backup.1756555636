<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>CREATA Hotel Network - Join Our Partner Network</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        * { box-sizing: border-box; }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        .header {
            background: #2c3e50;
            color: white;
            padding: 30px;
            text-align: center;
        }
        .header h1 { margin: 0; font-size: 2.2em; font-weight: 300; }
        .header p { margin: 10px 0 0; opacity: 0.9; font-size: 1.1em; }
        .form-container {
            padding: 40px;
        }
        .form-section {
            margin-bottom: 35px;
            border-bottom: 1px solid #eee;
            padding-bottom: 25px;
        }
        .form-section:last-child { border-bottom: none; }
        .section-title {
            font-size: 1.3em;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #3498db;
        }
        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }
        .form-group {
            flex: 1;
        }
        .form-group.full-width {
            flex: 100%;
        }
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #555;
        }
        input[type="text"], input[type="email"], input[type="tel"], input[type="number"], 
        textarea, select {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e1e8ed;
            border-radius: 8px;
            font-size: 14px;
            transition: border-color 0.3s;
        }
        input:focus, textarea:focus, select:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }
        textarea { resize: vertical; min-height: 100px; }
        .checkbox-group {
            display: flex;
            gap: 30px;
            flex-wrap: wrap;
            margin-top: 15px;
        }
        .checkbox-item {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        .checkbox-item input[type="checkbox"] {
            width: auto;
            margin: 0;
        }
        .capacity-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 15px;
        }
        .submit-section {
            text-align: center;
            margin-top: 40px;
            padding-top: 30px;
            border-top: 2px solid #eee;
        }
        .submit-btn {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            padding: 15px 40px;
            border: none;
            border-radius: 50px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
            min-width: 200px;
        }
        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(52, 152, 219, 0.3);
        }
        .submit-btn:disabled {
            background: #bdc3c7;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        .success-message {
            display: none;
            background: #2ecc71;
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
        }
        .error-message {
            display: none;
            background: #e74c3c;
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        .help-text {
            font-size: 13px;
            color: #7f8c8d;
            margin-top: 5px;
        }

        /* Chat Widget Styles */
        .chat-widget {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
        }

        .chat-toggle {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, #3498db, #2980b9);
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
            box-shadow: 0 4px 20px rgba(52, 152, 219, 0.4);
            transition: transform 0.3s, box-shadow 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .chat-toggle:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 25px rgba(52, 152, 219, 0.5);
        }

        .chat-window {
            position: absolute;
            bottom: 80px;
            right: 0;
            width: 350px;
            height: 450px;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.2);
            display: none;
            flex-direction: column;
            overflow: hidden;
        }

        .chat-window.open {
            display: flex;
        }

        .chat-header {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            padding: 15px;
            font-weight: 600;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .chat-close {
            background: none;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
            padding: 0;
            width: 25px;
            height: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .chat-messages {
            flex: 1;
            padding: 15px;
            overflow-y: auto;
            background: #f8f9fa;
        }

        .chat-message {
            margin-bottom: 15px;
            display: flex;
            flex-direction: column;
        }

        .chat-message.user {
            align-items: flex-end;
        }

        .chat-message.bot {
            align-items: flex-start;
        }

        .message-bubble {
            max-width: 80%;
            padding: 10px 15px;
            border-radius: 15px;
            word-wrap: break-word;
            line-height: 1.4;
        }

        .chat-message.user .message-bubble {
            background: #3498db;
            color: white;
            border-bottom-right-radius: 5px;
        }

        .chat-message.bot .message-bubble {
            background: white;
            color: #333;
            border: 1px solid #e1e8ed;
            border-bottom-left-radius: 5px;
        }

        .message-time {
            font-size: 11px;
            color: #7f8c8d;
            margin-top: 5px;
            padding: 0 5px;
        }

        .chat-input-container {
            padding: 15px;
            background: white;
            border-top: 1px solid #e1e8ed;
            display: flex;
            gap: 10px;
        }

        .chat-input {
            flex: 1;
            padding: 10px 15px;
            border: 1px solid #e1e8ed;
            border-radius: 20px;
            outline: none;
            font-size: 14px;
        }

        .chat-input:focus {
            border-color: #3498db;
        }

        .chat-send {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #3498db;
            border: none;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background 0.2s;
        }

        .chat-send:hover {
            background: #2980b9;
        }

        .chat-send:disabled {
            background: #bdc3c7;
            cursor: not-allowed;
        }

        .typing-indicator {
            display: none;
            padding: 10px 15px;
            color: #7f8c8d;
            font-style: italic;
            font-size: 13px;
        }

        .typing-indicator.show {
            display: block;
        }

        /* Quick Actions */
        .quick-actions {
            padding: 10px 15px;
            background: white;
            border-top: 1px solid #e1e8ed;
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .quick-action {
            background: #f8f9fa;
            border: 1px solid #e1e8ed;
            border-radius: 15px;
            padding: 5px 12px;
            font-size: 12px;
            cursor: pointer;
            transition: background 0.2s;
        }

        .quick-action:hover {
            background: #e9ecef;
        }

        @media (max-width: 480px) {
            .chat-window {
                width: 300px;
                height: 400px;
            }
            
            .chat-widget {
                bottom: 15px;
                right: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Join CREATA Hotel Network</h1>
            <p>Partner with us to receive government hospitality contract opportunities</p>
        </div>
        
        <div class="form-container">
            <div class="success-message" id="successMessage">
                <h3>Welcome to CREATA Network!</h3>
                <p>Your hotel registration has been submitted successfully. We'll review your information and contact you within 24 hours.</p>
            </div>
            
            <div class="error-message" id="errorMessage"></div>
            
            <form id="hotelRegistrationForm">
                <!-- Hotel Information -->
                <div class="form-section">
                    <div class="section-title">Hotel Information</div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="hotelName">Hotel Name *</label>
                            <input type="text" id="hotelName" name="name" required>
                        </div>
                        <div class="form-group">
                            <label for="chainAffiliation">Chain Affiliation</label>
                            <input type="text" id="chainAffiliation" name="chain_affiliation" placeholder="e.g., Marriott, Hilton, Independent">
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="starRating">Star Rating</label>
                            <select id="starRating" name="star_rating">
                                <option value="">Select Rating</option>
                                <option value="2">2 Star</option>
                                <option value="3">3 Star</option>
                                <option value="4">4 Star</option>
                                <option value="5">5 Star</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="website">Website</label>
                            <input type="text" id="website" name="website" placeholder="https://yourhotel.com">
                        </div>
                    </div>
                </div>

                <!-- Contact Information -->
                <div class="form-section">
                    <div class="section-title">Primary Contact Information</div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="contactName">Contact Name *</label>
                            <input type="text" id="contactName" name="contact_name" required>
                        </div>
                        <div class="form-group">
                            <label for="email">Email Address *</label>
                            <input type="email" id="email" name="email" required>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="phone">Phone Number</label>
                            <input type="tel" id="phone" name="phone" placeholder="(555) 123-4567">
                        </div>
                    </div>
                </div>

                <!-- Location -->
                <div class="form-section">
                    <div class="section-title">Location</div>
                    
                    <div class="form-group full-width">
                        <label for="address">Street Address</label>
                        <input type="text" id="address" name="address">
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="city">City</label>
                            <input type="text" id="city" name="city">
                        </div>
                        <div class="form-group">
                            <label for="state">State</label>
                            <input type="text" id="state" name="state" placeholder="e.g., FL, CA, TX">
                        </div>
                        <div class="form-group">
                            <label for="zipCode">ZIP Code</label>
                            <input type="text" id="zipCode" name="zip_code">
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="airportDistance">Distance from Major Airport (miles)</label>
                            <input type="number" id="airportDistance" name="airport_distance_miles" min="0" max="200">
                        </div>
                        <div class="form-group">
                            <label for="parkingSpaces">Available Parking Spaces</label>
                            <input type="number" id="parkingSpaces" name="parking_spaces" min="0">
                        </div>
                    </div>
                </div>

                <!-- Hotel Capacity -->
                <div class="form-section">
                    <div class="section-title">Hotel Capacity</div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="sleepingRooms">Total Sleeping Rooms *</label>
                            <input type="number" id="sleepingRooms" name="sleeping_rooms" min="1" required>
                        </div>
                        <div class="form-group">
                            <label for="meetingRooms">Number of Meeting Rooms</label>
                            <input type="number" id="meetingRooms" name="meeting_rooms" min="0">
                        </div>
                    </div>
                </div>

                <!-- Meeting Space Capacities -->
                <div class="form-section">
                    <div class="section-title">Meeting Space Capacities</div>
                    <p class="help-text">Enter the maximum capacity for each setup style. Leave blank if not available.</p>
                    
                    <div class="capacity-grid">
                        <div class="form-group">
                            <label for="ballroomCapacity">Ballroom (Banquet Style)</label>
                            <input type="number" id="ballroomCapacity" name="ballroom_capacity" min="0">
                        </div>
                        <div class="form-group">
                            <label for="classroomCapacity">Classroom Style</label>
                            <input type="number" id="classroomCapacity" name="classroom_capacity" min="0">
                        </div>
                        <div class="form-group">
                            <label for="theaterCapacity">Theater Style</label>
                            <input type="number" id="theaterCapacity" name="theater_capacity" min="0">
                        </div>
                        <div class="form-group">
                            <label for="boardroomCapacity">Boardroom Style</label>
                            <input type="number" id="boardroomCapacity" name="boardroom_capacity" min="0">
                        </div>
                        <div class="form-group">
                            <label for="largestMeeting">Largest Single Meeting Space</label>
                            <input type="number" id="largestMeeting" name="largest_meeting_capacity" min="0">
                        </div>
                    </div>
                </div>

                <!-- Services & Amenities -->
                <div class="form-section">
                    <div class="section-title">Services & Amenities</div>
                    
                    <div class="checkbox-group">
                        <div class="checkbox-item">
                            <input type="checkbox" id="hasAV" name="has_av_equipment">
                            <label for="hasAV">Audio/Visual Equipment Available</label>
                        </div>
                        <div class="checkbox-item">
                            <input type="checkbox" id="catering" name="catering_available">
                            <label for="catering">Full-Service Catering Available</label>
                        </div>
                    </div>
                </div>

                <!-- Email Preferences -->
                <div class="form-section">
                    <div class="section-title">Email Preferences</div>
                    
                    <div class="form-group">
                        <label for="emailPreferences">How often would you like to receive opportunity notifications?</label>
                        <select id="emailPreferences" name="email_preferences">
                            <option value="all">All opportunities (as they become available)</option>
                            <option value="daily">Daily digest</option>
                            <option value="weekly">Weekly summary</option>
                            <option value="qualified_only">Only when we match your capabilities</option>
                        </select>
                        <div class="help-text">We'll only send opportunities that match your hotel's capacity and location.</div>
                    </div>
                </div>

                <div class="submit-section">
                    <button type="submit" class="submit-btn" id="submitBtn">Join CREATA Network</button>
                    <div class="help-text" style="margin-top: 15px;">
                        By submitting this form, you agree to receive contract opportunity notifications from CREATA Global.
                    </div>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Chat Widget -->
    <div class="chat-widget">
        <button class="chat-toggle" id="chatToggle">
            💬
        </button>
        <div class="chat-window" id="chatWindow">
            <div class="chat-header">
                <span>CREATA Support</span>
                <button class="chat-close" id="chatClose">×</button>
            </div>
            <div class="chat-messages" id="chatMessages">
                <div class="chat-message bot">
                    <div class="message-bubble">
                        Hi! I'm here to help you with hotel registration questions. How can I assist you today?
                    </div>
                    <div class="message-time">Now</div>
                </div>
            </div>
            <div class="quick-actions">
                <div class="quick-action" data-message="How do I register my hotel?">Registration Help</div>
                <div class="quick-action" data-message="What are the requirements?">Requirements</div>
                <div class="quick-action" data-message="How does the network work?">How it Works</div>
                <div class="quick-action" data-message="Contact information">Contact Info</div>
            </div>
            <div class="typing-indicator" id="typingIndicator">
                CREATA Support is typing...
            </div>
            <div class="chat-input-container">
                <input type="text" class="chat-input" id="chatInput" placeholder="Type your message..." maxlength="500">
                <button class="chat-send" id="chatSend">→</button>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('hotelRegistrationForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const submitBtn = document.getElementById('submitBtn');
            const successMessage = document.getElementById('successMessage');
            const errorMessage = document.getElementById('errorMessage');
            
            // Reset messages
            successMessage.style.display = 'none';
            errorMessage.style.display = 'none';
            
            // Disable submit button
            submitBtn.disabled = true;
            submitBtn.textContent = 'Submitting...';
            
            try {
                const formData = new FormData(this);
                const data = {};
                
                // Convert FormData to object
                for (let [key, value] of formData.entries()) {
                    if (value === 'on') {
                        data[key] = true;
                    } else if (value === '' && (key.includes('capacity') || key.includes('rooms') || key.includes('spaces') || key.includes('distance') || key.includes('rating'))) {
                        data[key] = 0;
                    } else {
                        data[key] = value;
                    }
                }
                
                const response = await fetch('/api/hotels/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (result.ok) {
                    successMessage.style.display = 'block';
                    this.reset();
                    this.style.display = 'none';
                } else {
                    throw new Error(result.error || 'Registration failed');
                }
                
            } catch (error) {
                errorMessage.textContent = 'Registration failed: ' + error.message;
                errorMessage.style.display = 'block';
            } finally {
                submitBtn.disabled = false;
                submitBtn.textContent = 'Join CREATA Network';
            }
        });
        
        // Chat functionality
        class ChatWidget {
            constructor() {
                this.isOpen = false;
                this.messages = [];
                this.initializeElements();
                this.bindEvents();
            }

            initializeElements() {
                this.chatToggle = document.getElementById('chatToggle');
                this.chatWindow = document.getElementById('chatWindow');
                this.chatClose = document.getElementById('chatClose');
                this.chatMessages = document.getElementById('chatMessages');
                this.chatInput = document.getElementById('chatInput');
                this.chatSend = document.getElementById('chatSend');
                this.typingIndicator = document.getElementById('typingIndicator');
                this.quickActions = document.querySelectorAll('.quick-action');
            }

            bindEvents() {
                this.chatToggle.addEventListener('click', () => this.toggleChat());
                this.chatClose.addEventListener('click', () => this.closeChat());
                this.chatSend.addEventListener('click', () => this.sendMessage());
                this.chatInput.addEventListener('keypress', (e) => {
                    if (e.key === 'Enter' && !e.shiftKey) {
                        e.preventDefault();
                        this.sendMessage();
                    }
                });

                this.quickActions.forEach(action => {
                    action.addEventListener('click', () => {
                        const message = action.getAttribute('data-message');
                        this.sendQuickMessage(message);
                    });
                });
            }

            toggleChat() {
                if (this.isOpen) {
                    this.closeChat();
                } else {
                    this.openChat();
                }
            }

            openChat() {
                this.chatWindow.classList.add('open');
                this.isOpen = true;
                this.chatInput.focus();
            }

            closeChat() {
                this.chatWindow.classList.remove('open');
                this.isOpen = false;
            }

            sendQuickMessage(message) {
                this.chatInput.value = message;
                this.sendMessage();
            }

            async sendMessage() {
                const message = this.chatInput.value.trim();
                if (!message) return;

                this.addMessage(message, 'user');
                this.chatInput.value = '';
                this.showTyping();

                try {
                    const response = await this.getResponse(message);
                    this.hideTyping();
                    this.addMessage(response, 'bot');
                } catch (error) {
                    this.hideTyping();
                    this.addMessage('Sorry, I\'m having trouble responding right now. Please try again or contact us directly at infor@creataglobal.com', 'bot');
                }
            }

            async getResponse(message) {
                const lowerMessage = message.toLowerCase();
                
                if (lowerMessage.includes('register') || lowerMessage.includes('sign up')) {
                    return "To register your hotel, simply fill out the form above with your hotel details including name, contact information, room capacity, and meeting space capabilities. We'll review your registration and contact you within 24 hours!";
                }
                
                if (lowerMessage.includes('requirement') || lowerMessage.includes('need')) {
                    return "We require basic hotel information: name, contact details, total sleeping rooms, and meeting space capacity. Optional details like AV equipment and catering help us match you with better opportunities.";
                }
                
                if (lowerMessage.includes('how') && (lowerMessage.includes('work') || lowerMessage.includes('process'))) {
                    return "Here's how it works: 1) Register your hotel, 2) We analyze government opportunities, 3) You receive email notifications for matching contracts, 4) We support you through the bidding process. It's that simple!";
                }
                
                if (lowerMessage.includes('contact') || lowerMessage.includes('phone') || lowerMessage.includes('email')) {
                    return "You can reach us at:\n📧 infor@creataglobal.com\n📞 (305) 850-7848\n👤 Atakan Camadan - Government Contracting Specialist\n\nWe're here to help!";
                }
                
                if (lowerMessage.includes('cost') || lowerMessage.includes('fee') || lowerMessage.includes('price')) {
                    return "Registration is free! We only earn when you win contracts. There are no upfront costs or hidden fees to join the CREATA hotel network.";
                }
                
                if (lowerMessage.includes('government') || lowerMessage.includes('contract')) {
                    return "We specialize in government hospitality contracts including military training events, federal conferences, and agency meetings. We handle all the complex procurement requirements for you.";
                }
                
                return "Thanks for your question! For detailed assistance, please contact our team at infor@creataglobal.com or (305) 850-7848. We're here to help you join the CREATA hotel network!";
            }

            addMessage(text, sender) {
                const messageDiv = document.createElement('div');
                messageDiv.className = `chat-message ${sender}`;
                
                const bubbleDiv = document.createElement('div');
                bubbleDiv.className = 'message-bubble';
                bubbleDiv.textContent = text;
                
                const timeDiv = document.createElement('div');
                timeDiv.className = 'message-time';
                timeDiv.textContent = new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
                
                messageDiv.appendChild(bubbleDiv);
                messageDiv.appendChild(timeDiv);
                
                this.chatMessages.appendChild(messageDiv);
                this.scrollToBottom();
            }

            showTyping() {
                this.typingIndicator.classList.add('show');
                this.chatSend.disabled = true;
                this.scrollToBottom();
            }

            hideTyping() {
                this.typingIndicator.classList.remove('show');
                this.chatSend.disabled = false;
            }

            scrollToBottom() {
                this.chatMessages.scrollTop = this.chatMessages.scrollHeight;
            }
        }

        // Initialize chat widget when page loads
        document.addEventListener('DOMContentLoaded', function() {
            new ChatWidget();
        });
    </script>
</body>
</html>
